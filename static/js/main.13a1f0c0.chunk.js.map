{"version":3,"sources":["TopTab.js","Task.js","TaskList.js","BottomTab.js","AddPopUp.js","ErrorPopUp.js","App.js","InMemoryApp.js","index.js"],"names":["TopTab","props","useState","previousState","setPreviousState","id","value","sortParameter","disabled","data","length","appMode","AppModes","LOADING_MODE","onChange","e","setSortParameter","target","EDIT_MODE","onClick","onCancelEdits","setAppMode","DEFAULT_MODE","icon","faUndo","faSave","faEdit","ADD_MODE","faPlus","Task","className","type","checked","task","isChecked","onTaskChanged","taskName","priorityLevel","parseInt","onTasksDeleted","faTrash","size","num","repeat","TaskList","tasks","filter","tasksShowing","TasksShowing","ALL","UNCOMPLETED","map","BottomTab","deleteSelected","setDeleteSelected","getConfirmationText","numTasks","deleteContainer","switcherContainer","setTasksShowing","AddPopUp","setTaskName","setPriorityLevel","onSubmit","preventDefault","onItemAdded","autoFocus","ErrorPopUp","error","window","location","reload","JSON","stringify","App","useEffect","loading","onTaskAdded","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","collectionName","InMemoryApp","query","collection","orderBy","split","useCollection","docs","doc","taskIDs","delete","generateUniqueID","set","created","database","ServerValue","TIMESTAMP","taskID","field","newValue","update","a","ReactDOM","render","StrictMode","initialData","document","getElementById"],"mappings":"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","file":"static/js/main.13a1f0c0.chunk.js","sourcesContent":["import './TopTab.css'\nimport {AppModes} from \"./App\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faEdit, faPlus, faSave, faUndo} from '@fortawesome/free-solid-svg-icons'\nimport {useState} from \"react\";\n\nfunction TopTab(props) {\n    const [previousState, setPreviousState] = useState(null);\n\n    return (\n        <div id=\"topTab\">\n            <div id='topTabThird'>\n                <select\n                    id='sortParameterSelector'\n                    value={props.sortParameter}\n                    disabled={props.data.length <= 1 || props.appMode === AppModes.LOADING_MODE}\n                    onChange={(e) => props.setSortParameter(e.target.value)}\n                >\n                    <option value=\"taskName asc\">Name &#x2B06;</option>\n                    <option value=\"taskName desc\">Name &#x2B07;</option>\n                    <option value=\"created asc\">Date &#x2B06;</option>\n                    <option value=\"created desc\">Date &#x2B07;</option>\n                    <option value=\"priorityLevel asc\">Priority &#x2B06;</option>\n                    <option value=\"priorityLevel desc\">Priority &#x2B07;</option>\n                </select>\n            </div>\n            <div id='topTabThird'>\n                <h1 id=\"title\">To-Do</h1>\n            </div>\n            <div id='topTabThird'>\n                {props.appMode === AppModes.EDIT_MODE ?\n                    <>\n                        <button id=\"cancelEdits\"\n                                onClick={() => {\n                                    props.onCancelEdits(previousState)\n                                    props.setAppMode(AppModes.DEFAULT_MODE)\n                                }}\n                        >\n                            <FontAwesomeIcon icon={faUndo}/>\n                        </button>\n                        <button id=\"saveEdits\" onClick={() => props.setAppMode(AppModes.DEFAULT_MODE)}>\n                            <FontAwesomeIcon icon={faSave}/>\n                        </button>\n                    </>\n                    :\n                    <>\n                        <button id=\"editButton\"\n                                onClick={() => {\n                                    props.setAppMode(AppModes.EDIT_MODE)\n                                    setPreviousState(props.data)\n                                }}\n                                disabled={props.data.length < 1 || props.appMode !== AppModes.DEFAULT_MODE}\n                        >\n                            <FontAwesomeIcon icon={faEdit}/>\n                        </button>\n                        <button id=\"addItem\"\n                                onClick={() => props.setAppMode(AppModes.ADD_MODE)}\n                                disabled={props.appMode !== AppModes.DEFAULT_MODE}\n                        >\n                            <FontAwesomeIcon icon={faPlus}/>\n                        </button>\n                    </>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default TopTab;","import './Task.css'\nimport {AppModes} from \"./App\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faTrash} from '@fortawesome/free-solid-svg-icons'\n\nfunction Task(props) {\n\n    function getPriorityClass(num) {\n        if (num === 1) {\n            return 'priorityLevel low';\n        } else if (num === 2) {\n            return 'priorityLevel medium';\n        } else {\n            return 'priorityLevel high';\n        }\n    }\n\n    return (\n        <li className=\"listItem\">\n            <label className=\"taskLabel\">\n                <input\n                    className=\"checkbox\"\n                    type=\"checkbox\"\n                    checked={props.task.isChecked}\n                    disabled={props.appMode === AppModes.EDIT_MODE}\n                    onChange={(e) => props.onTaskChanged(props.task.id, 'isChecked', e.target.checked)}\n                />\n                <div className=\"taskContent\">\n                    {props.appMode === AppModes.EDIT_MODE ?\n                        <>\n                            <input\n                                className=\"editInput\"\n                                type=\"text\"\n                                value={props.task.taskName}\n                                onChange={(e) => props.onTaskChanged(props.task.id, 'taskName', e.target.value)}\n                            />\n                            <select\n                                className='prioritySelector'\n                                value={props.task.priorityLevel}\n                                onChange={(e) => props.onTaskChanged(props.task.id, 'priorityLevel', parseInt(e.target.value))}\n                            >\n                                <option value='1'>!</option>\n                                <option value='2'>!!</option>\n                                <option value='3'>!!!</option>\n                            </select>\n                            <button\n                                className=\"deleteButton\"\n                                onClick={() => props.onTasksDeleted([props.task.id])}\n                            >\n                                <FontAwesomeIcon icon={faTrash} size=\"xs\"/>\n                            </button>\n                        </>\n                        :\n                        <>\n                            <span className=\"taskName\">{props.task.taskName}</span>\n                            <span className={getPriorityClass(props.task.priorityLevel)}>\n                                {\"!\".repeat(props.task.priorityLevel)}\n                            </span>\n                        </>\n                    }\n                </div>\n            </label>\n        </li>\n    )\n}\n\nexport default Task;\n","import './TaskList.css'\nimport Task from \"./Task\";\nimport {AppModes, TasksShowing} from \"./App\";\n\nfunction TaskList(props) {\n    let tasks = props.data?.filter(task =>\n        props.tasksShowing === TasksShowing.ALL ||\n        (props.tasksShowing === TasksShowing.UNCOMPLETED && !task.isChecked)\n    );\n    return <ul id=\"itemList\">\n        {props.appMode === AppModes.LOADING_MODE ?\n            /* Loader information https://www.w3schools.com/howto/howto_css_loader.asp*/\n            <div id=\"loader\"/>\n            : <>\n                {tasks.length > 0 ?\n                    tasks.map(task => {\n                        return <Task\n                            key={task.id}\n                            task={task}\n                            appMode={props.appMode}\n                            onTaskChanged={props.onTaskChanged}\n                            onTasksDeleted={props.onTasksDeleted}\n                        />\n                    })\n                    : <li key='1' id=\"noItems\">\n                        <h3>{props.appMode === AppModes.EDIT_MODE ?\n                            'No tasks to edit.' :\n                            'You have completed all your tasks, woohoo!'}\n                        </h3>\n                    </li>\n                }\n            </>\n        }\n    </ul>\n}\n\nexport default TaskList;\n","import './BottomTab.css'\nimport {AppModes, TasksShowing} from \"./App\";\nimport {useState} from \"react\";\n\nfunction BottomTab(props) {\n    const [deleteSelected, setDeleteSelected] = useState(null);\n\n    function getConfirmationText(numTasks) {\n        return numTasks > 1 ? numTasks + \" tasks\" : numTasks + \" task\"\n    }\n\n    const deleteContainer = (\n        <div id=\"deleteButtonContainer\">\n            {deleteSelected === null ?\n                <button\n                    type=\"button\"\n                    id=\"deleteCompleted\"\n                    disabled={props.tasksShowing === TasksShowing.UNCOMPLETED\n                    || props.data.filter(task => task.isChecked).length === 0}\n                    onClick={() => setDeleteSelected('completed')}\n                > Delete All Completed\n                </button>\n                :\n                <button\n                    type=\"button\"\n                    id=\"cancel\"\n                    onClick={() => setDeleteSelected(null)}\n                > Cancel\n                </button>\n            }\n            {deleteSelected === null ?\n                <button\n                    type=\"button\"\n                    id=\"deleteAll\"\n                    disabled={props.data.length === 0}\n                    onClick={() => {\n                        setDeleteSelected('all');\n                    }\n                    }\n                > Delete All\n                </button>\n                :\n                <button\n                    type=\"button\"\n                    id=\"confirm\"\n                    onClick={() => {\n                        props.onTasksDeleted(deleteSelected === 'all' ?\n                            props.data.map(task => task.id)\n                            : props.data.filter(task => task.isChecked).map(task => task.id)\n                        );\n                        setDeleteSelected(null);\n                    }\n                    }\n                > Delete {deleteSelected === 'all' ?\n                    getConfirmationText(props.data.length)\n                    : getConfirmationText(props.data.filter(task => task.isChecked).length)}\n                </button>\n            }\n        </div>\n    )\n\n    const switcherContainer = (\n        <div id=\"switcherContainer\">\n            <button\n                type=\"button\"\n                id=\"showAll\"\n                disabled={props.tasksShowing === TasksShowing.ALL}\n                onClick={() => props.setTasksShowing(TasksShowing.ALL)}\n            > All\n            </button>\n            <button\n                type=\"button\"\n                id=\"showUncompleted\"\n                disabled={props.tasksShowing === TasksShowing.UNCOMPLETED}\n                onClick={() => props.setTasksShowing(TasksShowing.UNCOMPLETED)}\n            > Uncompleted\n            </button>\n        </div>\n    )\n    return (\n        <div id=\"footer\">\n            {props.appMode === AppModes.EDIT_MODE ? deleteContainer : switcherContainer}\n        </div>\n    )\n}\n\nexport default BottomTab;","import './AddPopUp.css'\nimport {AppModes} from \"./App\";\nimport {useState} from \"react\";\n\nfunction AddPopUp(props) {\n    const [taskName, setTaskName] = useState('');\n    const [priorityLevel, setPriorityLevel] = useState(1);\n\n    return <>\n        {props.appMode === AppModes.ADD_MODE &&\n        <div id=\"createPopUpBackground\">\n            <div id=\"createPopUp\">\n                <div id=\"createHeader\">\n                    <button\n                        id=\"closeCreate\"\n                        onClick={() => {\n                            setTaskName('');\n                            setPriorityLevel(1);\n                            props.setAppMode(AppModes.DEFAULT_MODE)\n                        }}\n                    >X\n                    </button>\n                    <h2> New Task </h2>\n                    <button>X</button>\n                </div>\n                <form id=\"createForm\" onSubmit={(e) => {\n                    e.preventDefault();\n                    props.onItemAdded(taskName, priorityLevel);\n                    setTaskName('');\n                    setPriorityLevel(1);\n                    props.setAppMode(AppModes.DEFAULT_MODE);\n                }}>\n                    <input\n                        id=\"taskName\"\n                        type=\"text\"\n                        value={taskName}\n                        onChange={(e) => setTaskName(e.target.value)}\n                        autoFocus\n                    />\n                    <div id=\"prioritySelector\">\n                        <button\n                            className=\"priorityButton\"\n                            type=\"button\"\n                            id=\"low\"\n                            disabled={priorityLevel === 1}\n                            onClick={() => setPriorityLevel(1)}\n                        >Low!\n                        </button>\n                        <button\n                            className=\"priorityButton\"\n                            type=\"button\"\n                            id=\"medium\"\n                            disabled={priorityLevel === 2}\n                            onClick={() => setPriorityLevel(2)}\n                        >Medium!!\n                        </button>\n                        <button\n                            className=\"priorityButton\"\n                            type=\"button\"\n                            id=\"high\"\n                            disabled={priorityLevel === 3}\n                            onClick={() => setPriorityLevel(3)}\n                        >High!!!\n                        </button>\n                    </div>\n                    <button id=\"addTask\"\n                            type=\"submit\"\n                            disabled={taskName.length === 0}\n                    >Add Task\n                    </button>\n                </form>\n            </div>\n        </div>\n        }\n    </>\n}\n\nexport default AddPopUp;\n","import './ErrorPopUp.css'\n\nfunction ErrorPopUp(props) {\n    return <>\n        {props.error &&\n        <div id=\"errorPopUpBackground\">\n            <div id=\"errorPopUp\">\n                <div id=\"errorHeader\">\n                    <button\n                        id=\"closeError\"\n                        onClick={() => window.location.reload(true)}\n                    >X\n                    </button>\n                    <h2> Error </h2>\n                    <button>X</button>\n                </div>\n                <span id=\"errorMessage\">{JSON.stringify(props.error)}</span>\n            </div>\n        </div>\n        }\n    </>\n}\n\nexport default ErrorPopUp;\n","import './App.css';\nimport TopTab from \"./TopTab\";\nimport TaskList from \"./TaskList\";\nimport BottomTab from \"./BottomTab\";\nimport AddPopUp from \"./AddPopUp\";\nimport {useEffect, useState} from \"react\";\nimport ErrorPopUp from \"./ErrorPopUp\";\n\nexport const AppModes = {\n    ADD_MODE: \"add_mode\",\n    DEFAULT_MODE: \"default_mode\",\n    EDIT_MODE: \"edit_mode\",\n    LOADING_MODE: \"loading_mode\"\n}\n\nexport const TasksShowing = {\n    ALL: \"all\",\n    UNCOMPLETED: \"uncompleted\",\n}\n\nfunction App(props) {\n    const [appMode, setAppMode] = useState(AppModes.LOADING_MODE);\n    const [tasksShowing, setTasksShowing] = useState(TasksShowing.ALL);\n\n    useEffect(() => {\n        if (props.loading) {\n            setAppMode(AppModes.LOADING_MODE);\n        } else {\n            setAppMode(AppModes.DEFAULT_MODE);\n        }\n    }, [props.loading])\n\n    return (\n        <div className=\"App\">\n            <ErrorPopUp\n                error={props.error}\n            />\n            <AddPopUp\n                appMode={appMode}\n                setAppMode={setAppMode}\n                onItemAdded={props.onTaskAdded}\n            />\n            <TopTab\n                appMode={appMode}\n                setAppMode={setAppMode}\n                data={props.data}\n                onCancelEdits={props.onCancelEdits}\n                sortParameter={props.sortParameter}\n                setSortParameter={props.setSortParameter}\n            />\n            <TaskList\n                data={props.data}\n                appMode={appMode}\n                tasksShowing={tasksShowing}\n                onTaskChanged={props.onTaskChanged}\n                onTasksDeleted={props.onTasksDeleted}\n            />\n            <BottomTab\n                data={props.data}\n                appMode={appMode}\n                tasksShowing={tasksShowing}\n                setTasksShowing={setTasksShowing}\n                onTasksDeleted={props.onTasksDeleted}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import App from \"./App\";\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDbDnRMAuOjcmsEB2iwcbt2_w6SPX-EAQo\",\n    authDomain: \"cs124lab3.firebaseapp.com\",\n    projectId: \"cs124lab3\",\n    storageBucket: \"cs124lab3.appspot.com\",\n    messagingSenderId: \"191143519167\",\n    appId: \"1:191143519167:web:f33464f0d0ede5b538370a\",\n    measurementId: \"G-B8CQHTFNQE\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst collectionName = \"tasks\";\n\nfunction InMemoryApp() {\n    const [sortParameter, setSortParameter] = useState('priorityLevel desc');\n    const query = db.collection(collectionName).orderBy(sortParameter.split(' ')[0], sortParameter.split(' ')[1]);\n    const [value, loading, error] = useCollection(query);\n    const data = value?.docs.map(doc => doc.data()) || [];\n\n    function onTaskAdded(taskName, priorityLevel) {\n        const id = generateUniqueID();\n        db.collection(collectionName).doc(id).set({\n            id: id,\n            taskName: taskName,\n            priorityLevel: priorityLevel,\n            isChecked: false,\n            created: firebase.database.ServerValue.TIMESTAMP,\n        });\n    }\n\n    function onTaskChanged(taskID, field, newValue) {\n        db.collection(collectionName).doc(taskID).update(\n            {[field]: newValue}\n        );\n    }\n\n    function onTasksDeleted(taskIDs) {\n        for (let id of taskIDs) {\n            db.collection(collectionName).doc(id).delete();\n        }\n    }\n\n    function onCancelEdits(tasks) {\n        if (tasks) {\n            onTasksDeleted(data.map(a => a.id));\n            for (let task of tasks) {\n                db.collection(collectionName).doc(task.id).set(task);\n            }\n        }\n    }\n\n    return <App data={data}\n                loading={loading}\n                error={error}\n                onTaskAdded={onTaskAdded}\n                onTaskChanged={onTaskChanged}\n                onTasksDeleted={onTasksDeleted}\n                onCancelEdits={onCancelEdits}\n                sortParameter={sortParameter}\n                setSortParameter={setSortParameter}/>\n}\n\nexport default InMemoryApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport InMemoryApp from \"./InMemoryApp\";\n\nlet initialData = [\n    {id: 1, taskName: 'Buy eggs', isChecked: false},\n    {id: 2, taskName: 'Buy milk', isChecked: true},\n    {id: 3, taskName: 'Walk dog', isChecked: false},\n    {id: 4, taskName: 'Get haircut', isChecked: true},\n]\n\nReactDOM.render(\n    <React.StrictMode>\n        <InMemoryApp initialData={initialData}/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}