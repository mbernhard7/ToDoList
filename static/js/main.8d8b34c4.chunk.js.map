{"version":3,"sources":["TopTab.js","Task.js","TaskList.js","BottomTab.js","AddTaskPopUp.js","ErrorPopUp.js","ListSelector.js","ListPopUp.js","App.js","List.js","Lists.js","index.js"],"names":["TopTab","props","id","className","value","sortParameter","disabled","dataLength","appMode","AppModes","LOADING_MODE","onChange","e","setSortParameter","target","EDIT_MODE","onClick","setDataChanges","setAppMode","DEFAULT_MODE","icon","faUndo","applyDataChanges","faSave","faEdit","ADD_TASK_MODE","console","log","faPlus","Task","num","addUpdateToChangeList","field","addToTaskChangeList","task","taskChangeList","type","checked","isChecked","onTaskChanged","taskName","priorityLevel","parseInt","faTrash","size","repeat","TaskList","tasks","data","filter","tasksShowing","TasksShowing","ALL","UNCOMPLETED","changes","dataChanges","length","map","BottomTab","useState","deleteSelected","setDeleteSelected","getConfirmationText","numTasks","deleteContainer","onTasksDeleted","switcherContainer","setTasksShowing","AddTaskPopUp","setTaskName","setPriorityLevel","onSubmit","preventDefault","onItemAdded","autoFocus","ErrorPopUp","error","window","location","reload","JSON","stringify","name","code","ListSelector","currentListID","setCurrentListID","lists","l","listName","EDIT_LISTS_MODE","faListUl","ListPopUp","setListName","toBeDeletedID","setToBeDeletedID","border","frame","rules","colSpan","onListDeleted","isDefault","onListChanged","placeholder","onListAdded","App","lastAppMode","setLastAppMode","useEffect","loading","onTaskAdded","toDelete","Object","keys","forEach","push","k","List","query","collection","orderBy","split","useCollection","docs","doc","generateUniqueID","set","created","firebase","firestore","FieldValue","serverTimestamp","taskID","newValue","update","taskIDs","delete","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","listCollectionName","Lists","a","get","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d8b34c4.chunk.js","sourcesContent":["import './TopTab.css'\nimport {AppModes} from \"./App\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faEdit, faPlus, faSave, faUndo} from '@fortawesome/free-solid-svg-icons'\n\nfunction TopTab(props) {\n\n    return (\n        <div id=\"topTab\">\n            <div className='topTabThird first'>\n                <select\n                    id='sortParameterSelector'\n                    value={props.sortParameter}\n                    disabled={props.dataLength <= 1 || props.appMode === AppModes.LOADING_MODE}\n                    onChange={(e) => props.setSortParameter(e.target.value)}\n                >\n                    <option aria-label=\"Increasing by taskname\" value=\"taskName asc\">Name &#x2B06;</option>\n                    <option aria-label=\"Decreasing by taskname\" value=\"taskName desc\">Name &#x2B07;</option>\n                    <option aria-label=\"Increasing by date created\" value=\"created asc\">Date &#x2B06;</option>\n                    <option aria-label=\"Decreasing by date created\" value=\"created desc\">Date &#x2B07;</option>\n                    <option aria-label=\"Increasing by priority level\"\n                            value=\"priorityLevel asc\">Priority &#x2B06;</option>\n                    <option aria-label=\"Decreasing by priority level\"\n                            value=\"priorityLevel desc\">Priority &#x2B07;</option>\n                </select>\n            </div>\n            <div className='topTabThird'>\n                <h1 id=\"title\">To-Do</h1>\n            </div>\n            <div className='topTabThird last'>\n                {props.appMode === AppModes.EDIT_MODE ?\n                    <>\n                        <button\n                            aria-label=\"Cancel Edits\"\n                            id=\"cancelEdits\"\n                            onClick={() => {\n                                props.setDataChanges({})\n                                props.setAppMode(AppModes.DEFAULT_MODE)\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faUndo}/>\n                        </button>\n                        <button\n                            aria-label=\"Save Edits\"\n                            id=\"saveEdits\"\n                            onClick={() => {\n                                props.applyDataChanges()\n                                props.setAppMode(AppModes.DEFAULT_MODE)\n                            }}>\n                            <FontAwesomeIcon icon={faSave}/>\n                        </button>\n                    </>\n                    :\n                    <>\n                        <button\n                            aria-label=\"Edit Button\"\n                            id=\"editButton\"\n                            onClick={() => props.setAppMode(AppModes.EDIT_MODE)}\n                            disabled={props.dataLength < 1 || props.appMode !== AppModes.DEFAULT_MODE}\n                        >\n                            <FontAwesomeIcon icon={faEdit}/>\n                        </button>\n                        <button\n                            aria-label=\"Add Button\"\n                            id=\"addItem\"\n                            onClick={() => {\n                                props.setAppMode(AppModes.ADD_TASK_MODE);\n                                console.log(props.appMode)\n                            }}\n                            disabled={props.appMode !== AppModes.DEFAULT_MODE}\n                        >\n                            <FontAwesomeIcon icon={faPlus}/>\n                        </button>\n                    </>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default TopTab;","import './Task.css'\nimport {AppModes} from \"./App\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faTrash} from '@fortawesome/free-solid-svg-icons'\n\n\nfunction Task(props) {\n\n\n    function addUpdateToChangeList(field, value) {\n        props.addToTaskChangeList(props.task.id, {...props.taskChangeList, [field]: value})\n    }\n\n    function getPriorityClass(num) {\n        if (num === 1) {\n            return 'priorityLevel low';\n        } else if (num === 2) {\n            return 'priorityLevel medium';\n        } else {\n            return 'priorityLevel high';\n        }\n    }\n\n    return <>\n        {!('delete' in props.taskChangeList) && <li className=\"listItem\">\n            <label className=\"taskLabel\">\n                <input\n                    className=\"checkbox\"\n                    type=\"checkbox\"\n                    checked={props.task.isChecked}\n                    disabled={props.appMode === AppModes.EDIT_MODE}\n                    onChange={(e) => props.onTaskChanged(props.task.id, 'isChecked', e.target.checked)}\n                />\n                <div className=\"taskContent\">\n                    {props.appMode === AppModes.EDIT_MODE ?\n                        <>\n                            <input\n                                className=\"editInput\"\n                                type=\"text\"\n                                value={props.taskChangeList?.taskName || props.task.taskName}\n                                onChange={(e) => {\n                                    addUpdateToChangeList('taskName', e.target.value)\n                                }}\n                            />\n                            <select\n                                className='prioritySelector'\n                                value={props.taskChangeList?.priorityLevel || props.task.priorityLevel}\n                                onChange={(e) =>\n                                    addUpdateToChangeList('priorityLevel', parseInt(e.target.value))\n                                }\n                            >\n                                <option aria-label=\"Low priority\" value='1'>!</option>\n                                <option aria-label=\"Medium priority\" value='2'>!!</option>\n                                <option aria-label=\"High priority\" value='3'>!!!</option>\n                            </select>\n                            <button\n                                aria-label=\"Delete task\"\n                                className=\"deleteButton\"\n                                onClick={() => {\n                                    addUpdateToChangeList('delete', true)\n                                }}\n                            >\n                                <FontAwesomeIcon icon={faTrash} size=\"xs\"/>\n                            </button>\n                        </>\n                        :\n                        <>\n                            <span className=\"taskName\">{props.task.taskName}</span>\n                            <span className={getPriorityClass(props.task.priorityLevel)}>\n                                {\"!\".repeat(props.task.priorityLevel)}\n                            </span>\n                        </>\n                    }\n                </div>\n            </label>\n        </li>}\n    </>\n}\n\nexport default Task;\n","import './TaskList.css'\nimport Task from \"./Task\";\nimport {AppModes, TasksShowing} from \"./App\";\n\nfunction TaskList(props) {\n    let tasks = props.data?.filter(task =>\n        props.tasksShowing === TasksShowing.ALL ||\n        (props.tasksShowing === TasksShowing.UNCOMPLETED && !task.isChecked)\n    );\n\n    function addToTaskChangeList(id, changes) {\n        props.setDataChanges({...props.dataChanges, [id]: changes})\n    }\n\n    return <ul id=\"itemList\">\n        {props.appMode === AppModes.LOADING_MODE ?\n            /* Loader information https://www.w3schools.com/howto/howto_css_loader.asp*/\n            <div id=\"loader\"/>\n            : <>\n                {tasks.length > 0 ?\n                    tasks.map(task => {\n                        return <Task\n                            key={task.id}\n                            task={task}\n                            onTaskChanged={props.onTaskChanged}\n                            appMode={props.appMode}\n                            addToTaskChangeList={addToTaskChangeList}\n                            taskChangeList={task.id in props.dataChanges ? props.dataChanges[task.id] : {}}\n                        />\n                    })\n                    : <li key='1' id=\"noItems\">\n                        <h3>{props.appMode === AppModes.EDIT_MODE ?\n                            'No tasks to edit.' :\n                            'You have completed all your tasks, woohoo!'}\n                        </h3>\n                    </li>\n                }\n            </>\n        }\n    </ul>\n}\n\nexport default TaskList;\n","import './BottomTab.css'\nimport {AppModes, TasksShowing} from \"./App\";\nimport {useState} from \"react\";\n\nfunction BottomTab(props) {\n    const [deleteSelected, setDeleteSelected] = useState(null);\n\n    function getConfirmationText(numTasks) {\n        return numTasks > 1 ? numTasks + \" tasks\" : numTasks + \" task\"\n    }\n\n    const deleteContainer = (\n        <div id=\"deleteButtonContainer\">\n            {deleteSelected === null ?\n                <button\n                    type=\"button\"\n                    id=\"deleteCompleted\"\n                    disabled={props.tasksShowing === TasksShowing.UNCOMPLETED\n                    || props.data.filter(task => task.isChecked).length === 0}\n                    onClick={() => setDeleteSelected('completed')}\n                > Delete All Completed\n                </button>\n                :\n                <button\n                    type=\"button\"\n                    id=\"cancel\"\n                    onClick={() => setDeleteSelected(null)}\n                > Cancel\n                </button>\n            }\n            {deleteSelected === null ?\n                <button\n                    type=\"button\"\n                    id=\"deleteAll\"\n                    disabled={props.data.length === 0}\n                    onClick={() => {\n                        setDeleteSelected('all');\n                    }\n                    }\n                > Delete All\n                </button>\n                :\n                <button\n                    type=\"button\"\n                    id=\"confirm\"\n                    onClick={() => {\n                        props.onTasksDeleted(deleteSelected === 'all' ?\n                            props.data.map(task => task.id)\n                            : props.data.filter(task => task.isChecked).map(task => task.id)\n                        );\n                        setDeleteSelected(null);\n                    }\n                    }\n                > Delete {deleteSelected === 'all' ?\n                    getConfirmationText(props.data.length)\n                    : getConfirmationText(props.data.filter(task => task.isChecked).length)}\n                </button>\n            }\n        </div>\n    )\n\n    const switcherContainer = (\n        <div aria-label=\"Select Shown Tasks\" id=\"switcherContainer\">\n            <button\n                aria-label=\"Show All Tasks\"\n                type=\"button\"\n                id=\"showAll\"\n                disabled={props.tasksShowing === TasksShowing.ALL}\n                onClick={() => props.setTasksShowing(TasksShowing.ALL)}\n            > All\n            </button>\n            <button\n                aria-label=\"Show Uncompleted Tasks\"\n                type=\"button\"\n                id=\"showUncompleted\"\n                disabled={props.tasksShowing === TasksShowing.UNCOMPLETED}\n                onClick={() => props.setTasksShowing(TasksShowing.UNCOMPLETED)}\n            > Uncompleted\n            </button>\n        </div>\n    )\n    return (\n        <div id=\"footer\">\n            {props.appMode === AppModes.EDIT_MODE ? deleteContainer : switcherContainer}\n        </div>\n    )\n}\n\nexport default BottomTab;","import './AddTaskPopUp.css'\nimport {AppModes} from \"./App\";\nimport {useState} from \"react\";\n\nfunction AddTaskPopUp(props) {\n    const [taskName, setTaskName] = useState('');\n    const [priorityLevel, setPriorityLevel] = useState(1);\n\n    return <>\n        {props.appMode === AppModes.ADD_TASK_MODE &&\n        <div id=\"createPopUpBackground\">\n            <div id=\"createPopUp\">\n                <div id=\"createHeader\">\n                    <button\n                        id=\"closeCreate\"\n                        onClick={() => {\n                            setTaskName('');\n                            setPriorityLevel(1);\n                            props.setAppMode(AppModes.DEFAULT_MODE)\n                        }}\n                    >X\n                    </button>\n                    <h2> New Task </h2>\n                    <button>X</button>\n                </div>\n                <form id=\"createForm\" onSubmit={(e) => {\n                    e.preventDefault();\n                    props.onItemAdded(taskName, priorityLevel);\n                    setTaskName('');\n                    setPriorityLevel(1);\n                    props.setAppMode(AppModes.DEFAULT_MODE);\n                }}>\n                    <input\n                        id=\"taskName\"\n                        type=\"text\"\n                        value={taskName}\n                        onChange={(e) => setTaskName(e.target.value)}\n                        autoFocus\n                    />\n                    <div id=\"prioritySelector\">\n                        <button\n                            aria-label=\"Low priority\"\n                            className=\"priorityButton\"\n                            type=\"button\"\n                            id=\"low\"\n                            disabled={priorityLevel === 1}\n                            onClick={() => setPriorityLevel(1)}\n                        >Low!\n                        </button>\n                        <button\n                            aria-label=\"Medium priority\"\n                            className=\"priorityButton\"\n                            type=\"button\"\n                            id=\"medium\"\n                            disabled={priorityLevel === 2}\n                            onClick={() => setPriorityLevel(2)}\n                        >Medium!!\n                        </button>\n                        <button\n                            aria-label=\"High priority\"\n                            className=\"priorityButton\"\n                            type=\"button\"\n                            id=\"high\"\n                            disabled={priorityLevel === 3}\n                            onClick={() => setPriorityLevel(3)}\n                        >High!!!\n                        </button>\n                    </div>\n                    <button id=\"addTask\"\n                            type=\"submit\"\n                            disabled={taskName.length === 0}\n                    >Add Task\n                    </button>\n                </form>\n            </div>\n        </div>\n        }\n    </>\n}\n\nexport default AddTaskPopUp;\n","import './ErrorPopUp.css'\n\nfunction ErrorPopUp(props) {\n    return <>\n        {props.error &&\n        <div id=\"errorPopUpBackground\">\n            <div id=\"errorPopUp\">\n                <div id=\"errorHeader\">\n                    <button\n                        id=\"closeError\"\n                        onClick={() => window.location.reload(true)}\n                    >X\n                    </button>\n                    <h2>ERROR</h2>\n                    <button>X</button>\n                </div>\n                <span id=\"errorMessage\">Type: {JSON.stringify(props.error.name)}<br/>Message: {JSON.stringify(props.error.code)}</span>\n            </div>\n        </div>\n        }\n    </>\n}\n\nexport default ErrorPopUp;\n","import './ListSelector.css'\nimport {AppModes} from \"./App\";\nimport {faListUl} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nfunction ListSelector(props) {\n\n    return <div id='listSelectorRow'>\n        <div className=\"topTabThird first\">\n            <select\n                id='listSelector'\n                value={props.currentListID}\n                onChange={(e) => props.setCurrentListID(e.target.value)}\n            >\n                {props.lists.map(l => <option key={l.id} value={l.id}>{l.listName}</option>)}\n            </select>\n        </div>\n        <div className=\"topTabThird\"/>\n        <div className=\"topTabThird last\">\n            <button id='editLists' onClick={() => props.setAppMode(AppModes.EDIT_LISTS_MODE)}>\n                <FontAwesomeIcon icon={faListUl}/>\n            </button>\n        </div>\n    </div>\n}\n\nexport default ListSelector;","import './ListPopUp.css'\nimport {AppModes} from \"./App\";\nimport {useState} from \"react\";\nimport {faPlus, faTrash} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nfunction ListPopUp(props) {\n    const [listName, setListName] = useState(\"\");\n    const [toBeDeletedID, setToBeDeletedID] = useState(null);\n\n    return <>\n        {props.appMode === AppModes.EDIT_LISTS_MODE &&\n        <div id=\"listPopUpBackground\">\n            <div id=\"listPopUp\">\n                <div id=\"listHeader\">\n                    <button\n                        id=\"closeList\"\n                        disabled={props.lists.length === 0}\n                        onClick={() => {\n                            setListName(\"\");\n                            setToBeDeletedID(null);\n                            props.setAppMode(AppModes.DEFAULT_MODE)\n                        }}\n                    >X\n                    </button>\n                    <h2> Lists </h2>\n                    <button>X</button>\n                </div>\n                <div id=\"listsContainer\">\n                    <table id=\"lists\" border=\"1\" frame=\"void\" rules=\"rows\">\n                        <thead>\n                            <tr>\n                                <th className='default'>Default</th>\n                                <th className='name'/>\n                                <th className='deleteCell'/>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {props.lists.map(l => <tr key={l.id} id=\"list\">\n                                {toBeDeletedID === l.id ?\n                                    <td colSpan=\"3\" className='confirmCell'>\n                                        <span>Delete {l.listName}?</span>\n                                        <button\n                                            className=\"cancelDelete\"\n                                            onClick={() => setToBeDeletedID(null)}\n                                        >No</button>\n                                        <button\n                                            className=\"deleteConfirm\"\n                                            onClick={() => {\n                                                props.onListDeleted(l.id);\n                                                setToBeDeletedID(null);\n                                                }\n                                            }\n                                        >Yes</button>\n                                    </td>\n                                    :\n                                    <>\n                                        <td className='default'>\n                                            <input\n                                                className=\"defaultRadio\"\n                                                type=\"radio\"\n                                                checked={l.isDefault}\n                                                onChange={() => props.onListChanged(l.id, 'isDefault', true)}\n                                            />\n                                        </td>\n                                        <td className='name'>\n                                            <input\n                                                className=\"listName\"\n                                                type=\"text\"\n                                                value={l.listName}\n                                                onChange={(e)=>props.onListChanged(l.id,'listName',e.target.value)}\n                                            />\n                                        </td>\n                                        <td className='deleteCell'>\n                                            <button\n                                                className={l.isDefault ? \"hidden\" : \"deleteListButton\"}\n                                                disabled={l.isDefault}\n                                                onClick={() => setToBeDeletedID(l.id)}\n                                            >\n                                                <FontAwesomeIcon icon={faTrash} size=\"xs\"/>\n                                            </button>\n                                        </td>\n                                    </>\n                                }\n                            </tr>)\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                <div id='createListRow'>\n                    <div id='createInputWrapper'>\n                        <input\n                            id='createListInput'\n                            type='text'\n                            value={listName}\n                            placeholder=\"New list\"\n                            onChange={(e) => setListName(e.target.value)}\n                        />\n                    </div>\n                    <div id='createListWrapper'>\n                        <button id='createNewList'\n                                disabled={listName.length === 0}\n                                onClick={() => {\n                                    props.onListAdded(listName, props.lists.length === 0);\n                                    setListName(\"\");\n                                }}\n                        >\n                            <FontAwesomeIcon icon={faPlus}/>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        }\n    </>\n}\n\nexport default ListPopUp;\n","import './App.css';\nimport TopTab from \"./TopTab\";\nimport TaskList from \"./TaskList\";\nimport BottomTab from \"./BottomTab\";\nimport AddTaskPopUp from \"./AddTaskPopUp\";\nimport {useEffect, useState} from \"react\";\nimport ErrorPopUp from \"./ErrorPopUp\";\nimport ListSelector from \"./ListSelector\";\nimport ListPopUp from \"./ListPopUp\";\n\nexport const AppModes = {\n    ADD_TASK_MODE: \"add_task_mode\",\n    EDIT_LISTS_MODE: \"add_list_mode\",\n    DEFAULT_MODE: \"default_mode\",\n    EDIT_MODE: \"edit_mode\",\n    LOADING_MODE: \"loading_mode\"\n}\n\nexport const TasksShowing = {\n    ALL: \"all\",\n    UNCOMPLETED: \"uncompleted\",\n}\n\nfunction App(props) {\n    const [appMode, setAppMode] = useState(AppModes.LOADING_MODE);\n    const [lastAppMode, setLastAppMode] = useState(AppModes.DEFAULT_MODE);\n    const [tasksShowing, setTasksShowing] = useState(TasksShowing.ALL);\n    const [dataChanges, setDataChanges] = useState({});\n\n    function applyDataChanges(){\n        let toDelete = [];\n        Object.keys(dataChanges).forEach(function (id) {\n            if ('delete' in dataChanges[id]) {\n                toDelete.push(id)\n            }\n            Object.keys(dataChanges[id]).filter(k => k!=='delete').forEach(function (field) {\n                props.onTaskChanged(id, field, dataChanges[id][field])\n            })\n        });\n        if (toDelete.length > 0) {\n            props.onTasksDeleted(toDelete);\n        }\n    }\n\n    useEffect(() => {\n        if (props.loading) {\n            if (appMode !== AppModes.LOADING_MODE) {\n                setLastAppMode(appMode);\n            }\n            setAppMode(AppModes.LOADING_MODE);\n        } else {\n            if (props.lists.length === 0 || appMode === AppModes.EDIT_LISTS_MODE) {\n                setAppMode(AppModes.EDIT_LISTS_MODE)\n            } else if (appMode === AppModes.LOADING_MODE) {\n                setAppMode(lastAppMode);\n            }\n        }\n    }, [props.loading, props.lists, appMode, lastAppMode])\n\n    return (\n        <div className=\"App\">\n            <ErrorPopUp\n                error={props.error}\n            />\n            <ListPopUp\n                appMode={appMode}\n                setAppMode={setAppMode}\n                lists={props.lists}\n                onListAdded={props.onListAdded}\n                onListChanged={props.onListChanged}\n                onListDeleted={props.onListDeleted}\n            />\n            <AddTaskPopUp\n                appMode={appMode}\n                setAppMode={setAppMode}\n                onItemAdded={props.onTaskAdded}\n            />\n            <TopTab\n                dataLength={props.data.length}\n                appMode={appMode}\n                setAppMode={setAppMode}\n                applyDataChanges={applyDataChanges}\n                setDataChanges={setDataChanges}\n                sortParameter={props.sortParameter}\n                setSortParameter={props.setSortParameter}\n            />\n            <ListSelector\n                currentListID={props.currentListID}\n                setCurrentListID={props.setCurrentListID}\n                lists={props.lists}\n                setAppMode={setAppMode}\n            />\n            <TaskList\n                data={props.data}\n                onTaskChanged={props.onTaskChanged}\n                appMode={appMode}\n                tasksShowing={tasksShowing}\n                setDataChanges={setDataChanges}\n                dataChanges={dataChanges}\n            />\n            <BottomTab\n                data={props.data}\n                appMode={appMode}\n                tasksShowing={tasksShowing}\n                setTasksShowing={setTasksShowing}\n                onTasksDeleted={props.onTasksDeleted}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport App from \"./App\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\nfunction List(props) {\n    const [sortParameter, setSortParameter] = useState('priorityLevel desc');\n    const query = props.collection.orderBy(sortParameter.split(' ')[0], sortParameter.split(' ')[1]);\n    const [value, loading, error] = useCollection(query);\n    const data = value?.docs.map(doc => doc.data()) || [];\n\n    function onTaskAdded(taskName, priorityLevel) {\n        const id = generateUniqueID();\n        props.collection.doc(id).set({\n            id: id,\n            taskName: taskName,\n            priorityLevel: priorityLevel,\n            isChecked: false,\n            created: firebase.firestore.FieldValue.serverTimestamp(),\n        });\n    }\n\n    function onTaskChanged(taskID, field, newValue) {\n        props.collection.doc(taskID).update(\n            {[field]: newValue}\n        );\n    }\n\n    function onTasksDeleted(taskIDs) {\n        for (let id of taskIDs) {\n            props.collection.doc(id).delete();\n        }\n    }\n\n    return <App lists={props.lists}\n                data={data}\n                loading={loading || props.loading}\n                error={error ? error : props.error}\n                currentListID={props.currentListID}\n                setCurrentListID={props.setCurrentListID}\n                onListAdded={props.onListAdded}\n                onListDeleted={props.onListDeleted}\n                onListChanged={props.onListChanged}\n                sortParameter={sortParameter}\n                setSortParameter={setSortParameter}\n                onTaskAdded={onTaskAdded}\n                onTaskChanged={onTaskChanged}\n                onTasksDeleted={onTasksDeleted}/>\n}\n\nexport default List;","import {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport List from \"./List\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDbDnRMAuOjcmsEB2iwcbt2_w6SPX-EAQo\",\n    authDomain: \"cs124lab3.firebaseapp.com\",\n    projectId: \"cs124lab3\",\n    storageBucket: \"cs124lab3.appspot.com\",\n    messagingSenderId: \"191143519167\",\n    appId: \"1:191143519167:web:f33464f0d0ede5b538370a\",\n    measurementId: \"G-B8CQHTFNQE\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst listCollectionName = \"lists\";\n\nfunction Lists() {\n    const [currentListID, setCurrentListID] = useState(null);\n    const query = db.collection(listCollectionName);\n    const [value, loading, error] = useCollection(query);\n    let lists = value?.docs.map(doc => doc.data()) || [];\n\n    if (lists.length > 0 && !currentListID) {\n        lists.forEach(l => {\n            if (l.isDefault) {\n                setCurrentListID(l.id)\n            }\n        });\n    }\n\n    function onListAdded(listName, isDefault) {\n        const id = generateUniqueID();\n        db.collection(listCollectionName).doc(id).set({\n            id: id,\n            listName: listName,\n            isDefault: isDefault,\n        });\n        setCurrentListID(id);\n    }\n\n    async function onListDeleted(id) {\n        const tasks = await db.collection(listCollectionName).doc(id).collection('tasks').get();\n        await tasks.docs.forEach(doc => doc.ref.delete());\n        await db.collection(listCollectionName).doc(id).delete();\n        if (currentListID === id) {\n            lists.forEach(l => {\n                if (l.isDefault) {\n                    setCurrentListID(l.id)\n                }\n            });\n        }\n    }\n\n    function onListChanged(id, field, newValue) {\n        if (field === 'isDefault' && newValue) {\n            lists.filter(l => l.id !== id).forEach(l => onListChanged(l.id, 'isDefault', false))\n        }\n        db.collection(listCollectionName).doc(id).update(\n            {[field]: newValue}\n        );\n    }\n\n    return <>{currentListID && <List\n        collection={db.collection(listCollectionName).doc(currentListID).collection('tasks')}\n        lists={lists}\n        loading={loading}\n        error={error}\n        currentListID={currentListID}\n        setCurrentListID={setCurrentListID}\n        onListAdded={onListAdded}\n        onListDeleted={onListDeleted}\n        onListChanged={onListChanged}\n    />\n    }</>\n}\n\nexport default Lists","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Lists from \"./Lists\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Lists/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}