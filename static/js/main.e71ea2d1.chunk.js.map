{"version":3,"sources":["TopTab.js","Task.js","TaskList.js","BottomTab.js","AddTaskPopUp.js","ListSelector.js","ListPopUp.js","LoadingPopUp.js","SignUpSignIn.js","SharePopUp.js","SignedInApp.js","ErrorPopUp.js","List.js","Lists.js","VerifyEmail.js","App.js","index.js"],"names":["TopTab","props","id","className","value","sortParameter","disabled","dataLength","onChange","e","setSortParameter","target","appMode","AppModes","EDIT_MODE","onClick","setDataChanges","setAppMode","DEFAULT_MODE","icon","faUndo","applyDataChanges","faSave","faEdit","ADD_TASK_MODE","lists","length","faPlus","Task","num","addUpdateToChangeList","field","addToTaskChangeList","task","taskChangeList","type","checked","isChecked","onTaskChanged","undefined","taskName","priorityLevel","parseInt","faTrash","size","repeat","TaskList","tasks","data","filter","tasksShowing","TasksShowing","ALL","UNCOMPLETED","changes","dataChanges","map","BottomTab","useState","deleteSelected","setDeleteSelected","getConfirmationText","numTasks","deleteContainer","onTasksDeleted","switcherContainer","setTasksShowing","user","email","auth","signOut","AddTaskPopUp","setTaskName","setPriorityLevel","onSubmit","preventDefault","onItemAdded","autoFocus","ListSelector","currentListID","setCurrentListID","l","listName","find","owner","SHARE_LISTS_MODE","faUsers","EDIT_LISTS_MODE","faListUl","ListPopUp","setListName","toBeDeletedID","setToBeDeletedID","getListRow","onListChanged","sharedWith","faDoorOpen","getListDeleteRow","colSpan","onListDeleted","border","frame","rules","placeholder","onListAdded","LoadingPopUp","validateEmail","test","SignUpSignIn","MODES","mode","setMode","parseError","message","replace","split","SignUp","setEmail","password","setPassword","verifyPassword","setVerifyPassword","signUpLoading","htmlFor","createUserWithEmailAndPassword","signUpError","SignIn","signInLoading","signInWithEmailAndPassword","signInError","SharePopUp","userEmail","setUserEmail","toBeRemovedEmail","setToBeRemovedEmail","toBeMadeOwner","setToBeMadeOwner","toBeEdited","setToBeEdited","currentList","getRow","p","includes","getConfirmRow","getManageRow","faUserCog","getUserRow","concat","SignedInApp","onTaskAdded","toDelete","Object","keys","forEach","push","k","ErrorPopUp","error","window","location","reload","JSON","stringify","name","code","List","query","setQuery","useEffect","db","doc","get","then","exists","collection","orderBy","catch","useCollection","loading","docs","generateUniqueID","set","created","firebase","firestore","FieldValue","serverTimestamp","taskID","newValue","update","taskIDs","delete","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","listCollectionName","Lists","where","setLists","makingChanges","setMakingChanges","a","oldCurrent","ref","VerifyEmail","emailSent","setEmailSent","currentUser","sendEmailVerification","App","useAuthState","useSignInWithEmailAndPassword","signInUserCredential","useCreateUserWithEmailAndPassword","signUpUserCredential","emailVerified","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e71ea2d1.chunk.js","sourcesContent":["import './TopTab.css'\nimport {AppModes} from \"./SignedInApp\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faEdit, faPlus, faSave, faUndo} from '@fortawesome/free-solid-svg-icons'\n\nfunction TopTab(props) {\n\n    return (\n        <div id=\"topTab\">\n            <div className='topTabThird first'>\n                <select\n                    id='sortParameterSelector'\n                    value={props.sortParameter}\n                    disabled={props.dataLength <= 1}\n                    onChange={(e) => props.setSortParameter(e.target.value)}\n                >\n                    <option aria-label=\"Increasing by taskname\" value=\"taskName asc\">Name &#x2B06;</option>\n                    <option aria-label=\"Decreasing by taskname\" value=\"taskName desc\">Name &#x2B07;</option>\n                    <option aria-label=\"Increasing by date created\" value=\"created asc\">Date &#x2B06;</option>\n                    <option aria-label=\"Decreasing by date created\" value=\"created desc\">Date &#x2B07;</option>\n                    <option aria-label=\"Increasing by priority level\"\n                            value=\"priorityLevel asc\">Priority &#x2B06;</option>\n                    <option aria-label=\"Decreasing by priority level\"\n                            value=\"priorityLevel desc\">Priority &#x2B07;</option>\n                </select>\n            </div>\n            <div className='topTabThird'>\n                <h1>To-Do</h1>\n            </div>\n            <div className='topTabThird last'>\n                {props.appMode === AppModes.EDIT_MODE ?\n                    <>\n                        <button\n                            aria-label=\"Cancel Edits\"\n                            id=\"cancelEdits\"\n                            onClick={() => {\n                                props.setDataChanges({})\n                                props.setAppMode(AppModes.DEFAULT_MODE)\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faUndo}/>\n                        </button>\n                        <button\n                            aria-label=\"Save Edits\"\n                            id=\"saveEdits\"\n                            onClick={() => {\n                                props.applyDataChanges()\n                                props.setAppMode(AppModes.DEFAULT_MODE)\n                            }}>\n                            <FontAwesomeIcon icon={faSave}/>\n                        </button>\n                    </>\n                    :\n                    <>\n                        <button\n                            aria-label=\"Edit Button\"\n                            id=\"editButton\"\n                            onClick={() => props.setAppMode(AppModes.EDIT_MODE)}\n                            disabled={props.dataLength < 1 || props.appMode !== AppModes.DEFAULT_MODE}\n                        >\n                            <FontAwesomeIcon icon={faEdit}/>\n                        </button>\n                        <button\n                            aria-label=\"Add Button\"\n                            id=\"addItem\"\n                            onClick={() => {\n                                props.setAppMode(AppModes.ADD_TASK_MODE);\n                            }}\n                            disabled={props.appMode !== AppModes.DEFAULT_MODE || props.lists.length === 0}\n                        >\n                            <FontAwesomeIcon icon={faPlus}/>\n                        </button>\n                    </>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default TopTab;","import './Task.css'\nimport {AppModes} from \"./SignedInApp\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faTrash} from '@fortawesome/free-solid-svg-icons'\n\n\nfunction Task(props) {\n\n\n    function addUpdateToChangeList(field, value) {\n        props.addToTaskChangeList(props.task.id, {...props.taskChangeList, [field]: value})\n    }\n\n    function getPriorityClass(num) {\n        if (num === 1) {\n            return 'priorityLevel low';\n        } else if (num === 2) {\n            return 'priorityLevel medium';\n        } else {\n            return 'priorityLevel high';\n        }\n    }\n\n    return <>\n        {!('delete' in props.taskChangeList) && <li className=\"listItem\">\n            <label className=\"taskLabel\">\n                <input\n                    className=\"checkbox\"\n                    type=\"checkbox\"\n                    checked={props.task.isChecked}\n                    disabled={props.appMode === AppModes.EDIT_MODE}\n                    onChange={(e) => props.onTaskChanged(props.task.id, 'isChecked', e.target.checked)}\n                />\n                <div className=\"taskContent\">\n                    {props.appMode === AppModes.EDIT_MODE ?\n                        <>\n                            <input\n                                className=\"editInput\"\n                                type=\"text\"\n                                value={props.taskChangeList.taskName !== undefined ?\n                                    props.taskChangeList.taskName : props.task.taskName}\n                                onChange={(e) => {\n                                    addUpdateToChangeList('taskName', e.target.value)\n                                }}\n                            />\n                            <select\n                                className='prioritySelector'\n                                value={props.taskChangeList?.priorityLevel || props.task.priorityLevel}\n                                onChange={(e) =>\n                                    addUpdateToChangeList('priorityLevel', parseInt(e.target.value))\n                                }\n                            >\n                                <option aria-label=\"Low priority\" value='1'>!</option>\n                                <option aria-label=\"Medium priority\" value='2'>!!</option>\n                                <option aria-label=\"High priority\" value='3'>!!!</option>\n                            </select>\n                            <button\n                                aria-label=\"Delete task\"\n                                className=\"deleteButton\"\n                                onClick={() => {\n                                    addUpdateToChangeList('delete', true)\n                                }}\n                            >\n                                <FontAwesomeIcon icon={faTrash} size=\"xs\"/>\n                            </button>\n                        </>\n                        :\n                        <>\n                            <span className=\"taskName\">{props.task.taskName}</span>\n                            <span className={getPriorityClass(props.task.priorityLevel)}>\n                                {\"!\".repeat(props.task.priorityLevel)}\n                            </span>\n                        </>\n                    }\n                </div>\n            </label>\n        </li>}\n    </>\n}\n\nexport default Task;\n","import './TaskList.css'\nimport Task from \"./Task\";\nimport {AppModes, TasksShowing} from \"./SignedInApp\";\n\nfunction TaskList(props) {\n    let tasks = props.data?.filter(task =>\n        props.tasksShowing === TasksShowing.ALL ||\n        (props.tasksShowing === TasksShowing.UNCOMPLETED && !task.isChecked)\n    );\n\n    function addToTaskChangeList(id, changes) {\n        props.setDataChanges({...props.dataChanges, [id]: changes})\n    }\n\n    return <ul id=\"itemList\">\n        {tasks.length > 0 ?\n            tasks.map(task => {\n                return <Task\n                    key={task.id}\n                    task={task}\n                    onTaskChanged={props.onTaskChanged}\n                    appMode={props.appMode}\n                    addToTaskChangeList={addToTaskChangeList}\n                    taskChangeList={task.id in props.dataChanges ? props.dataChanges[task.id] : {}}\n                />\n            })\n            : <li key='1' id=\"noItems\">\n                <h3>{props.appMode === AppModes.EDIT_MODE ?\n                    'No tasks to edit.' :\n                    props.lists.length === 0 ?\n                        'You have no lists. Create your first one by clicking the lists icon above!'\n                        : 'You have completed all your tasks, woohoo!'\n                }\n                </h3>\n            </li>\n        }\n    </ul>\n}\n\nexport default TaskList;\n","import './BottomTab.css'\nimport {AppModes, TasksShowing} from \"./SignedInApp\";\nimport {useState} from \"react\";\n\nfunction BottomTab(props) {\n    const [deleteSelected, setDeleteSelected] = useState(null);\n\n    function getConfirmationText(numTasks) {\n        return numTasks > 1 ? numTasks + \" tasks\" : numTasks + \" task\"\n    }\n\n    const deleteContainer = (\n        <div id=\"deleteButtonContainer\">\n            {deleteSelected === null ?\n                <button\n                    type=\"button\"\n                    id=\"deleteCompleted\"\n                    disabled={props.tasksShowing === TasksShowing.UNCOMPLETED\n                    || props.data.filter(task => task.isChecked).length === 0}\n                    onClick={() => setDeleteSelected('completed')}\n                > Delete All Completed\n                </button>\n                :\n                <button\n                    type=\"button\"\n                    id=\"cancel\"\n                    onClick={() => setDeleteSelected(null)}\n                > Cancel\n                </button>\n            }\n            {deleteSelected === null ?\n                <button\n                    type=\"button\"\n                    id=\"deleteAll\"\n                    disabled={props.data.length === 0}\n                    onClick={() => {\n                        setDeleteSelected('all');\n                    }\n                    }\n                > Delete All\n                </button>\n                :\n                <button\n                    type=\"button\"\n                    id=\"confirm\"\n                    onClick={() => {\n                        props.onTasksDeleted(deleteSelected === 'all' ?\n                            props.data.map(task => task.id)\n                            : props.data.filter(task => task.isChecked).map(task => task.id)\n                        );\n                        setDeleteSelected(null);\n                    }\n                    }\n                > Delete {deleteSelected === 'all' ?\n                    getConfirmationText(props.data.length)\n                    : getConfirmationText(props.data.filter(task => task.isChecked).length)}\n                </button>\n            }\n        </div>\n    )\n\n    const switcherContainer = (\n        <div aria-label=\"Select Shown Tasks\" id=\"switcherContainer\">\n            <button\n                aria-label=\"Show All Tasks\"\n                type=\"button\"\n                id=\"showAll\"\n                disabled={props.tasksShowing === TasksShowing.ALL}\n                onClick={() => props.setTasksShowing(TasksShowing.ALL)}\n            > All\n            </button>\n            <button\n                aria-label=\"Show Uncompleted Tasks\"\n                type=\"button\"\n                id=\"showUncompleted\"\n                disabled={props.tasksShowing === TasksShowing.UNCOMPLETED}\n                onClick={() => props.setTasksShowing(TasksShowing.UNCOMPLETED)}\n            > Uncompleted\n            </button>\n        </div>\n    )\n    return (\n        <div id=\"footer\">\n            {props.appMode === AppModes.EDIT_MODE ? deleteContainer : switcherContainer}\n            <div id=\"signOutRow\">\n                <span>{props.user.email}</span>\n                <button id='signOutButton' onClick={() => props.auth.signOut()}>Sign Out</button>\n            </div>\n        </div>\n    )\n}\n\nexport default BottomTab;","import './AddTaskPopUp.css'\nimport './PopUp.css'\nimport {AppModes} from \"./SignedInApp\";\nimport {useState} from \"react\";\n\nfunction AddTaskPopUp(props) {\n    const [taskName, setTaskName] = useState('');\n    const [priorityLevel, setPriorityLevel] = useState(1);\n\n    return (\n        <div id=\"popUpBackground\">\n            <div id=\"popUp\">\n                <div id=\"popUpHeader\">\n                    <button\n                        id=\"closePopUp\"\n                        onClick={() => {\n                            setTaskName('');\n                            setPriorityLevel(1);\n                            props.setAppMode(AppModes.DEFAULT_MODE)\n                        }}\n                    >X\n                    </button>\n                    <h2> New Task </h2>\n                    <button>X</button>\n                </div>\n                <form id=\"createForm\" onSubmit={(e) => {\n                    e.preventDefault();\n                    props.onItemAdded(taskName, priorityLevel);\n                    setTaskName('');\n                    setPriorityLevel(1);\n                    props.setAppMode(AppModes.DEFAULT_MODE);\n                }}>\n                    <input\n                        id=\"taskName\"\n                        type=\"text\"\n                        value={taskName}\n                        onChange={(e) => setTaskName(e.target.value)}\n                        autoFocus\n                    />\n                    <div id=\"prioritySelector\">\n                        <button\n                            aria-label=\"Low priority\"\n                            className=\"priorityButton\"\n                            type=\"button\"\n                            id=\"low\"\n                            disabled={priorityLevel === 1}\n                            onClick={() => setPriorityLevel(1)}\n                        >Low!\n                        </button>\n                        <button\n                            aria-label=\"Medium priority\"\n                            className=\"priorityButton\"\n                            type=\"button\"\n                            id=\"medium\"\n                            disabled={priorityLevel === 2}\n                            onClick={() => setPriorityLevel(2)}\n                        >Medium!!\n                        </button>\n                        <button\n                            aria-label=\"High priority\"\n                            className=\"priorityButton\"\n                            type=\"button\"\n                            id=\"high\"\n                            disabled={priorityLevel === 3}\n                            onClick={() => setPriorityLevel(3)}\n                        >High!!!\n                        </button>\n                    </div>\n                    <button id=\"addTask\"\n                            type=\"submit\"\n                            disabled={taskName.length === 0}\n                    >Add Task\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddTaskPopUp;\n","import './ListSelector.css'\nimport {AppModes} from \"./SignedInApp\";\nimport {faListUl, faUsers} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nfunction ListSelector(props) {\n\n    return <div id='listSelectorRow'>\n        <div className=\"topTabThird first\">\n            <select\n                id='listSelector'\n                disabled={props.lists.length === 0}\n                value={props.currentListID || undefined}\n                onChange={(e) => props.setCurrentListID(e.target.value)}\n            >\n                {props.lists.map(l => <option key={l.id} value={l.id}>{l.listName}</option>)}\n            </select>\n        </div>\n        <div className=\"topTabThird\"/>\n        <div className=\"topTabThird last\">\n            {props.lists.find(l => l.id === props.currentListID)?.owner === props.user.email &&\n            <button id='shareLists' onClick={() => props.setAppMode(AppModes.SHARE_LISTS_MODE)}>\n                <FontAwesomeIcon icon={faUsers}/>\n            </button>\n            }\n            <button id='editLists' onClick={() => props.setAppMode(AppModes.EDIT_LISTS_MODE)}>\n                <FontAwesomeIcon icon={faListUl}/>\n            </button>\n        </div>\n    </div>\n}\n\nexport default ListSelector;","import './PopUp.css'\nimport './TablePopUp.css'\nimport './ListPopUp.css'\nimport {AppModes} from \"./SignedInApp\";\nimport {useState} from \"react\";\nimport {faDoorOpen, faPlus, faTrash, faUsers} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nfunction ListPopUp(props) {\n    const [listName, setListName] = useState(\"\");\n    const [toBeDeletedID, setToBeDeletedID] = useState(null);\n\n\n    function getListRow(l) {\n        return <>\n            {l.owner === props.user.email ?\n                <td className='listNameCell'>\n                    <input\n                        className=\"listNameInput\"\n                        type=\"text\"\n                        value={l.listName}\n                        onChange={(e) => props.onListChanged(l.id, 'listName', e.target.value)}\n                    />\n                </td>\n                :\n                <td className='sharedEmailCell'>\n                    <span>{l.listName}</span>\n                </td>\n            }\n            <td className='sharedCell'>\n                {l.sharedWith.length > 1 &&\n                <FontAwesomeIcon icon={faUsers} size=\"xs\"/>\n                }\n            </td>\n            <td className='deleteCell'>\n                <button\n                    className=\"deleteListButton\"\n                    onClick={() => setToBeDeletedID(l.id)}\n                >\n                    {l.owner === props.user.email ?\n                        <FontAwesomeIcon icon={faTrash} size=\"xs\"/>\n                        :\n                        <FontAwesomeIcon icon={faDoorOpen} size=\"xs\"/>\n                    }\n                </button>\n            </td>\n        </>\n    }\n\n    function getListDeleteRow(l) {\n        return <td colSpan=\"3\" className='confirmCell'>\n            <span>{(l.owner === props.user.email ? \"Delete \" : \"Leave \") + l.listName}?</span>\n            <button\n                className=\"cancelButton\"\n                onClick={() => setToBeDeletedID(null)}\n            >No\n            </button>\n            <button\n                className=\"confirmButton\"\n                onClick={() => {\n                    if (l.owner === props.user.email) {\n                        props.onListDeleted(l.id);\n                        setToBeDeletedID(null);\n                    } else {\n                        props.onListChanged(l.id,\n                            'sharedWith',\n                            l.sharedWith.filter(e => e !== props.user.email)\n                        );\n                    }\n                }\n                }\n            >Yes\n            </button>\n        </td>\n    }\n\n    return (\n        <div id=\"popUpBackground\">\n            <div id=\"popUp\">\n                <div id=\"popUpHeader\">\n                    <button\n                        id=\"closePopUp\"\n                        onClick={() => {\n                            setListName(\"\");\n                            setToBeDeletedID(null);\n                            props.setAppMode(AppModes.DEFAULT_MODE)\n                        }}\n                    >X\n                    </button>\n                    <h2 id=\"tableTitle\"> Lists </h2>\n                    <button>X</button>\n                </div>\n                {props.lists.length > 0 ?\n                    <div id=\"tableContainer\">\n                        <table id=\"table\" border=\"1\" frame=\"void\" rules=\"rows\">\n                            <thead>\n                            <tr className=\"tableHeaderRow\">\n                                <th className='listNameCell'>Name</th>\n                                <th className='sharedCell'>Shared</th>\n                                <th className='deleteCell'>Delete</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {props.lists.map(l => <tr key={l.id} className=\"tableRow\">\n                                {toBeDeletedID === l.id ?\n                                    getListDeleteRow(l)\n                                    :\n                                    getListRow(l)\n                                }\n                            </tr>)\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n                    :\n                    <div id='messageContainer'>\n                        <h3>Create your first list!</h3>\n                    </div>\n                }\n                <form id='createRow'>\n                    <div id='createInputWrapper'>\n                        <input\n                            id='createInput'\n                            type='text'\n                            value={listName}\n                            placeholder=\"New list\"\n                            onChange={(e) => setListName(e.target.value)}\n                        />\n                    </div>\n                    <div id='createButtonWrapper'>\n                        <button id='createNewButton'\n                                type=\"submit\"\n                                disabled={listName.length === 0}\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    props.onListAdded(listName, props.lists.length === 0);\n                                    setListName(\"\");\n                                }}\n                        >\n                            <FontAwesomeIcon icon={faPlus}/>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default ListPopUp;\n","import \"./LoadingPopUp.css\"\nimport \"./PopUp.css\"\n\nfunction LoadingPopUp() {\n\n    return <div id=\"popUpBackground\" className=\"loadingPopUpBackground\">\n        <div id=\"loader\"/>\n    </div>\n\n}\n\nexport default LoadingPopUp;\n\n","import {useState} from \"react\";\nimport './SignUpSignIn.css'\nimport LoadingPopUp from \"./LoadingPopUp\";\n\n\nexport function validateEmail(email) {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(email);\n}\n\nfunction SignUpSignIn(props) {\n    const MODES = {\n        SIGN_IN: 'Sign In',\n        SIGN_UP: 'Sign Up',\n    }\n    const [mode, setMode] = useState(null);\n\n    /* Validation from:\n    https://stackoverflow.com/questions/46155/whats-the-best-way-to-validate-an-email-address-in-javascript\n     */\n\n    function parseError(message) {\n        return message.replace('Firebase: ', '').split('(')[0];\n    }\n\n    function SignUp() {\n        const [email, setEmail] = useState(\"\");\n        const [password, setPassword] = useState(\"\");\n        const [verifyPassword, setVerifyPassword] = useState(\"\");\n\n        return <>\n            {props.signUpLoading ?\n                <LoadingPopUp/> :\n                <form id=\"signUp\">\n                    <label htmlFor=\"email\">Email:</label>\n                    <input id='email'\n                           className=\"signUpSignInInput\"\n                           type='email'\n                           value={email}\n                           onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <label htmlFor=\"password\">Password:</label>\n                    <input id='password'\n                           className=\"signUpSignInInput\"\n                           type='password'\n                           value={password}\n                           onChange={(e) => setPassword(e.target.value)}\n                    />\n                    {(password !== \"\" && password.length < 6) &&\n                    <span className=\"errorMessage\">Password must be at least 6 characters long</span>}\n                    <label htmlFor=\"verifyPassword\"> Verify Password:</label>\n                    <input id='verifyPassword'\n                           className=\"signUpSignInInput\"\n                           type='password'\n                           value={verifyPassword}\n                           onChange={(e) => setVerifyPassword(e.target.value)}\n                    />\n                    {(password !== \"\" && verifyPassword !== \"\" && password !== verifyPassword) &&\n                    <span className=\"errorMessage\">Passwords don't match!</span>}\n                    <button id='signUpSubmit'\n                            type='submit'\n                            onClick={() => props.createUserWithEmailAndPassword(email, password)}\n                            disabled={!validateEmail(email) || password.length < 6 || password !== verifyPassword}\n                    >Submit\n                    </button>\n                    {props.signUpError !== null && props.signUpError !== undefined &&\n                    <span className=\"errorMessage\">{parseError(props.signUpError.message)}</span>}\n                </form>\n            }\n        </>\n    }\n\n    function SignIn() {\n        const [email, setEmail] = useState(\"\");\n        const [password, setPassword] = useState(\"\");\n\n        return <>\n            {props.signInLoading ?\n                <LoadingPopUp/> :\n                <form id='signIn'>\n                    <label htmlFor=\"email\">Email:</label>\n                    <input id='email'\n                           className=\"signUpSignInInput\"\n                           type='email'\n                           value={email}\n                           onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <label htmlFor=\"password\">Password:</label>\n                    <input id='password'\n                           className=\"signUpSignInInput\"\n                           type='password'\n                           value={password}\n                           onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <button id='signInSubmit'\n                            type='submit'\n                            onClick={() => props.signInWithEmailAndPassword(email, password)}\n                            disabled={email === \"\" || password === \"\"}\n                    >Submit\n                    </button>\n                    {props.signInError !== null && props.signInError !== undefined &&\n                    <span className=\"errorMessage\">{parseError(props.signInError.message)}</span>}\n                </form>\n            }\n        </>\n    }\n\n    return <div id='signUpSignIn'>\n        {mode === null && <h1 id=\"title\">To-Do List</h1>}\n        <div id=\"buttonOptions\">\n            {mode === MODES.SIGN_IN && <SignIn/>}\n            {mode === MODES.SIGN_UP && <SignUp/>}\n            {mode !== null && <div id=\"divider\">\n                <hr/>\n                <span>Or</span>\n                <hr/>\n            </div>}\n            {mode !== MODES.SIGN_IN && <button id='logInButton' onClick={() => setMode(MODES.SIGN_IN)}>Log In</button>}\n            {mode !== MODES.SIGN_UP &&\n            <button id='signUpButton' onClick={() => setMode(MODES.SIGN_UP)}>Sign Up</button>}\n        </div>\n    </div>\n}\n\nexport default SignUpSignIn;","import './PopUp.css'\nimport './TablePopUp.css'\nimport './SharePopUp.css'\nimport {AppModes} from \"./SignedInApp\";\nimport {useState} from \"react\";\nimport {faPlus, faUndo, faUserCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {validateEmail} from \"./SignUpSignIn\";\n\nfunction SharePopUp(props) {\n    const [userEmail, setUserEmail] = useState(\"\");\n    const [toBeRemovedEmail, setToBeRemovedEmail] = useState(null);\n    const [toBeMadeOwner, setToBeMadeOwner] = useState(null);\n    const [toBeEdited, setToBeEdited] = useState(null);\n    const currentList = props.lists.find(l => l.id === props.currentListID);\n\n\n    function getUserRow(p) {\n        return <>\n            <td className='sharedEmailCell'>\n                <span>{p}</span>\n            </td>\n            <td className='manageCell'>\n                <button\n                    className=\"manageButton\"\n                    onClick={() => setToBeEdited(p)}\n                >\n                    <FontAwesomeIcon icon={faUserCog} size=\"xs\"/>\n                </button>\n            </td>\n        </>\n    }\n\n    function getManageRow(p) {\n        return <>\n            <td className='sharedEmailCell'>\n                <button\n                    className=\"makeOwnerButton\"\n                    onClick={() => setToBeMadeOwner(p)}\n                >Make Owner\n                </button>\n                <button\n                    className=\"removeUserButton\"\n                    onClick={() => setToBeRemovedEmail(p)}\n                >Remove\n                </button>\n            </td>\n            <td className='manageCell'>\n                <button\n                    className=\"cancelManageButton\"\n                    onClick={() => setToBeEdited(null)}\n                ><FontAwesomeIcon icon={faUndo} size=\"xs\"/>\n                </button>\n            </td>\n        </>\n    }\n\n    function getConfirmRow(p) {\n        return <td colSpan=\"3\" className='confirmCell'>\n            <span>\n                {p + \":\"}<br/>\n                {toBeRemovedEmail === p ? \"Remove from list?\" : \"Make owner? (You will lose ownership)\"}\n            </span>\n            <button\n                className=\"cancelButton\"\n                onClick={() => toBeRemovedEmail === p ?\n                    setToBeRemovedEmail(null) : setToBeMadeOwner(null)}\n            >No\n            </button>\n            <button\n                className=\"confirmButton\"\n                onClick={() => {\n                    if (toBeRemovedEmail === p) {\n                        setToBeRemovedEmail(null);\n                        setToBeEdited(null);\n                        props.onListChanged(props.currentListID,\n                            'sharedWith',\n                            currentList.sharedWith.filter(e => e !== p)\n                        );\n                    } else {\n                        props.onListChanged(props.currentListID, 'owner', p);\n                        props.setAppMode(AppModes.DEFAULT_MODE);\n                    }\n                }\n                }\n            >Yes\n            </button>\n        </td>\n    }\n\n    function getRow(p) {\n        if ([toBeRemovedEmail, toBeMadeOwner].includes(p)) {\n            return getConfirmRow(p);\n        }\n        if (p === toBeEdited) {\n            return getManageRow(p);\n        }\n        return getUserRow(p);\n    }\n\n    return <div id=\"popUpBackground\">\n        <div id=\"popUp\">\n            <div id=\"popUpHeader\">\n                <button\n                    id=\"closePopUp\"\n                    disabled={props.lists.length === 0}\n                    onClick={() => {\n                        setUserEmail(\"\");\n                        setToBeRemovedEmail(null);\n                        setToBeMadeOwner(null);\n                        props.setAppMode(AppModes.DEFAULT_MODE)\n                    }}\n                >X\n                </button>\n                <h2 id='tableTitle'>Share List:<br/>{currentList.listName}</h2>\n                <button>X</button>\n            </div>\n            {currentList.sharedWith.filter(e => e !== props.user.email).length > 0 ?\n                <div id=\"tableContainer\">\n                    <table id=\"table\" border=\"1\" frame=\"void\" rules=\"rows\">\n                        <thead>\n                        <tr className=\"tableHeaderRow\">\n                            <th className='sharedEmailCell'>Email</th>\n                            <th className='manageCell'>Settings</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {currentList.sharedWith.filter(e => e !== props.user.email).map(p =>\n                            <tr key={p} className=\"tableRow\">\n                                {getRow(p)}\n                            </tr>\n                        )}\n                        </tbody>\n                    </table>\n                </div>\n                :\n                <div id='messageContainer'>\n                    <h3>Add another user below!</h3>\n                </div>\n            }\n            <form id='createRow'>\n                <div id='createInputWrapper'>\n                    <input\n                        id='createInput'\n                        type=\"email\"\n                        value={userEmail}\n                        placeholder=\"User email\"\n                        onChange={(e) => setUserEmail(e.target.value)}\n                    />\n                </div>\n                <div id='createButtonWrapper'>\n                    <button id='createNewButton'\n                            type=\"submit\"\n                            disabled={!validateEmail(userEmail) || currentList.sharedWith.includes(userEmail)}\n                            onClick={(e) => {\n                                e.preventDefault();\n                                props.onListChanged(props.currentListID, 'sharedWith', currentList.sharedWith.concat([userEmail]))\n                                setUserEmail(\"\");\n                            }}\n                    >\n                        <FontAwesomeIcon icon={faPlus}/>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n}\n\nexport default SharePopUp;\n","import './SignedInApp.css';\nimport TopTab from \"./TopTab\";\nimport TaskList from \"./TaskList\";\nimport BottomTab from \"./BottomTab\";\nimport AddTaskPopUp from \"./AddTaskPopUp\";\nimport {useState} from \"react\";\nimport ListSelector from \"./ListSelector\";\nimport ListPopUp from \"./ListPopUp\";\nimport SharePopUp from \"./SharePopUp\";\n\nexport const AppModes = {\n    ADD_TASK_MODE: \"add_task_mode\",\n    EDIT_LISTS_MODE: \"edit_lists_mode\",\n    SHARE_LISTS_MODE: \"share_lists_mode\",\n    DEFAULT_MODE: \"default_mode\",\n    EDIT_MODE: \"edit_mode\"\n}\n\nexport const TasksShowing = {\n    ALL: \"all\",\n    UNCOMPLETED: \"uncompleted\",\n}\n\nfunction SignedInApp(props) {\n    const [appMode, setAppMode] = useState(AppModes.DEFAULT_MODE);\n    const [tasksShowing, setTasksShowing] = useState(TasksShowing.ALL);\n    const [dataChanges, setDataChanges] = useState({});\n\n    function applyDataChanges() {\n        let toDelete = [];\n        Object.keys(dataChanges).forEach(function (id) {\n            if ('delete' in dataChanges[id]) {\n                toDelete.push(id)\n            }\n            Object.keys(dataChanges[id]).filter(k => k !== 'delete').forEach(function (field) {\n                props.onTaskChanged(id, field, dataChanges[id][field])\n            })\n        });\n        if (toDelete.length > 0) {\n            props.onTasksDeleted(toDelete);\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            {appMode === AppModes.SHARE_LISTS_MODE &&\n            <SharePopUp\n                appMode={appMode}\n                setAppMode={setAppMode}\n                user={props.user}\n                lists={props.lists}\n                onListChanged={props.onListChanged}\n                currentListID={props.currentListID}\n            />\n            }\n            {appMode === AppModes.EDIT_LISTS_MODE &&\n            <ListPopUp\n                appMode={appMode}\n                setAppMode={setAppMode}\n                lists={props.lists}\n                user={props.user}\n                onListAdded={props.onListAdded}\n                onListChanged={props.onListChanged}\n                onListDeleted={props.onListDeleted}\n            />\n            }\n            {appMode === AppModes.ADD_TASK_MODE &&\n            <AddTaskPopUp\n                appMode={appMode}\n                setAppMode={setAppMode}\n                onItemAdded={props.onTaskAdded}\n            />\n            }\n            <TopTab\n                dataLength={props.data.length}\n                lists={props.lists}\n                appMode={appMode}\n                setAppMode={setAppMode}\n                applyDataChanges={applyDataChanges}\n                setDataChanges={setDataChanges}\n                sortParameter={props.sortParameter}\n                setSortParameter={props.setSortParameter}\n            />\n            <ListSelector\n                currentListID={props.currentListID}\n                setCurrentListID={props.setCurrentListID}\n                lists={props.lists}\n                setAppMode={setAppMode}\n                user={props.user}\n            />\n            <TaskList\n                data={props.data}\n                lists={props.lists}\n                onTaskChanged={props.onTaskChanged}\n                appMode={appMode}\n                tasksShowing={tasksShowing}\n                setDataChanges={setDataChanges}\n                dataChanges={dataChanges}\n            />\n            <BottomTab\n                data={props.data}\n                appMode={appMode}\n                tasksShowing={tasksShowing}\n                setTasksShowing={setTasksShowing}\n                onTasksDeleted={props.onTasksDeleted}\n                user={props.user}\n                auth={props.auth}\n            />\n        </div>\n    );\n}\n\nexport default SignedInApp;\n","import './ErrorPopUp.css'\n\nfunction ErrorPopUp(props) {\n    return <>\n        {props.error &&\n        <div id=\"popUpBackground\" className=\"errorPopUp\">\n            <div id=\"popUp\">\n                <div id=\"popUpHeader\">\n                    <button\n                        id=\"closePopUp\"\n                        onClick={() => window.location.reload(true)}\n                    >X\n                    </button>\n                    <h2 id=\"errorTitle\">ERROR</h2>\n                    <button>X</button>\n                </div>\n                <span\n                    id=\"errorMessage\">Type: {JSON.stringify(props.error.name)}<br/>Message: {JSON.stringify(props.error.code)}</span>\n            </div>\n        </div>\n        }\n    </>\n}\n\nexport default ErrorPopUp;\n","import {useEffect, useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport SignedInApp from \"./SignedInApp\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport ErrorPopUp from \"./ErrorPopUp\";\nimport LoadingPopUp from \"./LoadingPopUp\";\n\nfunction List(props) {\n    const [sortParameter, setSortParameter] = useState('priorityLevel desc');\n    const [query, setQuery] = useState(null);\n\n    useEffect(() => {\n        if (props.currentListID) {\n            props.db.doc(props.currentListID).get().then(doc => {\n                if (doc.exists) {\n                    setQuery(props.db.doc(props.currentListID).collection('tasks').orderBy(sortParameter.split(' ')[0], sortParameter.split(' ')[1]));\n                } else {\n                    setQuery(null);\n                }\n            }).catch((e) => e);\n        } else {\n            setQuery(null);\n        }\n    }, [props.currentListID, props.db, sortParameter])\n\n    const [value, loading, error] = useCollection(query);\n    const data = value?.docs.map(doc => doc.data()) || [];\n\n    function onTaskAdded(taskName, priorityLevel) {\n        const id = generateUniqueID();\n        props.db.doc(props.currentListID).collection('tasks').doc(id).set({\n            id: id,\n            taskName: taskName,\n            priorityLevel: priorityLevel,\n            isChecked: false,\n            created: firebase.firestore.FieldValue.serverTimestamp(),\n        });\n    }\n\n    function onTaskChanged(taskID, field, newValue) {\n        props.db.doc(props.currentListID).collection('tasks').doc(taskID).update(\n            {[field]: newValue}\n        );\n    }\n\n    function onTasksDeleted(taskIDs) {\n        for (let id of taskIDs) {\n            props.db.doc(props.currentListID).collection('tasks').doc(id).delete();\n        }\n    }\n\n    return <>\n        <ErrorPopUp\n            error={error}\n        />\n        {loading && <LoadingPopUp/>}\n        <SignedInApp\n            lists={props.lists}\n            data={data}\n            user={props.user}\n            auth={props.auth}\n            currentListID={props.currentListID}\n            setCurrentListID={props.setCurrentListID}\n            onListAdded={props.onListAdded}\n            onListDeleted={props.onListDeleted}\n            onListChanged={props.onListChanged}\n            sortParameter={sortParameter}\n            setSortParameter={setSortParameter}\n            onTaskAdded={onTaskAdded}\n            onTaskChanged={onTaskChanged}\n            onTasksDeleted={onTasksDeleted}\n        />\n    </>\n}\n\nexport default List;","import {useEffect, useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport List from \"./List\";\nimport ErrorPopUp from \"./ErrorPopUp\";\nimport LoadingPopUp from \"./LoadingPopUp\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDbDnRMAuOjcmsEB2iwcbt2_w6SPX-EAQo\",\n    authDomain: \"cs124lab3.firebaseapp.com\",\n    projectId: \"cs124lab3\",\n    storageBucket: \"cs124lab3.appspot.com\",\n    messagingSenderId: \"191143519167\",\n    appId: \"1:191143519167:web:f33464f0d0ede5b538370a\",\n    measurementId: \"G-B8CQHTFNQE\"\n};\n\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst listCollectionName = \"lists\";\n\nfunction Lists(props) {\n    const [currentListID, setCurrentListID] = useState(null);\n    const query = db.collection(listCollectionName).where('sharedWith', 'array-contains', props.user.email);\n    const [value, loading, error] = useCollection(query);\n    const [lists, setLists] = useState([]);\n    const [makingChanges, setMakingChanges] = useState(false);\n\n    useEffect(() => {\n        setLists(value?.docs.map(doc => doc.data()) || []);\n    }, [value])\n\n    useEffect(() => {\n        if (currentListID === null && !makingChanges) {\n            if (lists.length > 0) {\n                setCurrentListID(lists[0].id);\n            }\n        }\n    }, [currentListID, lists, makingChanges])\n\n    async function onListAdded(listName) {\n        setMakingChanges(true);\n        const id = generateUniqueID();\n        await db.collection(listCollectionName).doc(id).set({\n            id: id,\n            listName: listName,\n            owner: props.user.email,\n            sharedWith: [props.user.email],\n        })\n        setMakingChanges(false);\n    }\n\n    async function onListDeleted(id) {\n        setMakingChanges(true);\n        let oldCurrent = currentListID;\n        setCurrentListID(null);\n        const tasks = await db.collection(listCollectionName).doc(id).collection('tasks').get();\n        await tasks.docs.forEach(doc => doc.ref.delete());\n        await db.collection(listCollectionName).doc(id).delete();\n        if (id !== oldCurrent) {\n            setCurrentListID(oldCurrent);\n        }\n        setMakingChanges(false);\n    }\n\n    async function onListChanged(id, field, newValue) {\n        setMakingChanges(true);\n        if (id === currentListID && field === \"sharedWith\" && newValue.find(e => e === props.user.email) === undefined) {\n            setCurrentListID(null);\n        }\n        await db.collection(listCollectionName).doc(id).update(\n            {[field]: newValue}\n        );\n        setMakingChanges(false);\n    }\n\n    return <>\n        <ErrorPopUp\n            error={error}\n        />\n        {loading && <LoadingPopUp/>}\n        <List\n            lists={lists}\n            user={props.user}\n            auth={props.auth}\n            db={db.collection(listCollectionName)}\n            currentListID={currentListID}\n            setCurrentListID={setCurrentListID}\n            onListAdded={onListAdded}\n            onListDeleted={onListDeleted}\n            onListChanged={onListChanged}\n        />\n    </>\n}\n\nexport default Lists","import \"./PopUp.css\"\nimport \"./VerifyEmail.css\"\nimport {useState} from \"react\";\n\nfunction VerifyEmail(props) {\n    const [emailSent, setEmailSent] = useState(false);\n\n    function verifyEmail() {\n        props.auth.currentUser.sendEmailVerification();\n    }\n\n    return <div id=\"popUpBackground\">\n        <div id=\"popUp\">\n            <div id=\"popUpHeader\">\n                <button\n                    id=\"closePopUp\"\n                    onClick={() => props.auth.signOut()}\n                >X\n                </button>\n                <h2> Verify Email </h2>\n                <button>X</button>\n            </div>\n            <div id=\"verifyBody\">\n                {emailSent ?\n                    <>\n                        <span id=\"verifyMessage\">Check your email for a verification link:<br/>{props.user.email}</span>\n                        <div id=\"loader\"/>\n                        <button id='sendEmail' onClick={() => window.location.reload(true)}>Refresh Page</button>\n                    </>\n                    :\n                    <>\n                        <span\n                            id=\"verifyMessage\">Click the button below to send a verification email to:<br/>{props.user.email}</span>\n                        <button id='sendEmail' onClick={() => {\n                            setEmailSent(true);\n                            verifyEmail();\n                        }}>Send Email\n                        </button>\n                    </>\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default VerifyEmail;","import {\n    useAuthState,\n    useCreateUserWithEmailAndPassword,\n    useSignInWithEmailAndPassword\n} from 'react-firebase-hooks/auth';\nimport firebase from \"firebase/compat\";\nimport Lists from \"./Lists\";\nimport SignUpSignIn from \"./SignUpSignIn\";\nimport VerifyEmail from \"./VerifyEmail\";\nimport ErrorPopUp from \"./ErrorPopUp\";\nimport LoadingPopUp from \"./LoadingPopUp\";\n\nconst auth = firebase.auth();\n\nfunction App() {\n    const [user, loading, error] = useAuthState(auth);\n\n    const [\n        signInWithEmailAndPassword,\n        signInUserCredential, signInLoading, signInError\n    ] = useSignInWithEmailAndPassword(auth);\n    const [\n        createUserWithEmailAndPassword,\n        signUpUserCredential, signUpLoading, signUpError\n    ] = useCreateUserWithEmailAndPassword(auth);\n\n    return <>\n        <ErrorPopUp\n            error={error}\n        />\n        {loading ?\n            <LoadingPopUp/>\n            :\n            <>\n                {user ?\n                    <>\n                        {user.emailVerified ?\n                            <Lists user={user} auth={auth}/>\n                            :\n                            <VerifyEmail auth={auth} user={user}/>\n                        }\n                    </>\n                    : <SignUpSignIn auth={auth}\n                                    signInWithEmailAndPassword={signInWithEmailAndPassword}\n                                    signInUserCredential={signInUserCredential}\n                                    signInLoading={signInLoading}\n                                    signInError={signInError}\n                                    createUserWithEmailAndPassword={createUserWithEmailAndPassword}\n                                    signUpUserCredential={signUpUserCredential}\n                                    signUpLoading={signUpLoading}\n                                    signUpError={signUpError}\n                    />\n                }\n            </>\n        }\n    </>\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}